name: release

on:
  release:
    types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - name: Create .deb
      run: ./createdeb.sh ${{ github.event.release.tag_name }}
    - name: Create standalone binary
      run: |
        sudo pip3 install pyinstaller
        sudo pip3 install .
        sudo pyinstaller --add-data 'autobrightness/locales:autobrightness/locales' --add-data 'autobrightness/backend:autobrightness/backend' --add-data 'autobrightness/icon.png:autobrightness' --windowed --onefile --name autobrightness autobrightness/__main__.py
        zip --junk-paths autobrightness_${{ github.event.release.tag_name }}-standalone.zip dist/autobrightness README.md
      
    - uses: actions/upload-artifact@master
      name: Upload deb artifact
      with:
        name: deb
        path: autobrightness*.deb
    - uses: actions/upload-artifact@master
      name: Upload standalone artifact
      with:
        name: standalone
        path: autobrightness*-standalone.zip
  
  build-windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@master
    - name: Convert icon
      run: |
        function ConvertTo-Icon
        {
            <#
            .Synopsis
                Converts image to icons
            .Description
                Converts an image to an icon
            .Example
                ConvertTo-Icon -File .\Logo.png -OutputFile .\Favicon.ico
            #>
            [CmdletBinding()]
            param(
            # The file
            [Parameter(Mandatory=$true, Position=0,ValueFromPipelineByPropertyName=$true)]
            [Alias('Fullname')]
            [string]$File,
            
            # If set, will output bytes instead of creating a file
            [switch]$InMemory,
            
            # If provided, will output the icon to a location
            [Parameter(Position=1, ValueFromPipelineByPropertyName=$true)]
            [string]$OutputFile
            )
            
            begin {
                Add-Type -AssemblyName System.Windows.Forms, System.Drawing
                
            }
            
            process {
                #region Load Icon
                $resolvedFile = $ExecutionContext.SessionState.Path.GetResolvedPSPathFromPSPath($file)
                if (-not $resolvedFile) { return }
                $loadedImage = [Drawing.Image]::FromFile($resolvedFile)
                $intPtr = New-Object IntPtr
                $thumbnail = $loadedImage.GetThumbnailImage(72, 72, $null, $intPtr)
                $bitmap = New-Object Drawing.Bitmap $thumbnail 
                $bitmap.SetResolution(72, 72); 
                $icon = [System.Drawing.Icon]::FromHandle($bitmap.GetHicon());         
                #endregion Load Icon

                #region Save Icon
                if ($InMemory) {                        
                    $memStream = New-Object IO.MemoryStream
                    $icon.Save($memStream) 
                    $memStream.Seek(0,0)
                    $bytes = New-Object Byte[] $memStream.Length
                    $memStream.Read($bytes, 0, $memStream.Length)                        
                    $bytes
                } elseif ($OutputFile) {
                    $resolvedOutputFile = $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($outputFile)
                    $fileStream = [IO.File]::Create("$resolvedOutputFile")                               
                    $icon.Save($fileStream) 
                    $fileStream.Close()               
                }
                #endregion Save Icon

                #region Cleanup
                $icon.Dispose()
                $bitmap.Dispose()
                #endregion Cleanup

            }
        }
        ConvertTo-Icon -File .\autobrightness\icon.png -OutputFile icon.ico
    - name: Create exe
      run: |
        pip install pyinstaller
        pip install .
        pyinstaller --add-data 'autobrightness\locales;autobrightness\locales' --add-data 'autobrightness\backend;autobrightness\backend' --add-data 'autobrightness\icon.png;autobrightness' --icon icon.ico --windowed --onefile --name autobrightness autobrightness\__main__.py
        Compress-Archive -Path dist\autobrightness.exe,README.md -DestinationPath autobrightness_${{ github.event.release.tag_name }}-windows.zip
      
    - uses: actions/upload-artifact@master
      name: Upload exe artifact
      with:
        name: exe
        path: autobrightness*-windows.zip
  
  build-macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@master
    - name: Convert icon
      run: sips -s format icns autobrightness/icon.png --out icon.icns
    - name: Create macos app
      run: |
        ls -l autobrightness/icon.png
        ls -l icon.icns
        pip3 install pyinstaller
        pip3 install .
        pyinstaller --add-data 'autobrightness/locales:autobrightness/locales' --add-data 'autobrightness/backend:autobrightness/backend' --add-data 'autobrightness/icon.png:autobrightness' --icon icon.icns --windowed --onefile --name autobrightness autobrightness/__main__.py
        mv dist/autobrightness.app .
        sed -i.bak 's/0.0.0/${{ github.event.release.tag_name }}/g' autobrightness.app/Contents/Info.plist
        rm autobrightness.app/Contents/Info.plist.bak
        zip --recurse-paths autobrightness_${{ github.event.release.tag_name }}-macos.zip autobrightness.app README.md
      
    - uses: actions/upload-artifact@master
      name: Upload macos artifact
      with:
        name: macos
        path: autobrightness*-macos.zip
  
  publish:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        name: Download Artifacts
      
      - uses: skx/github-action-publish-binaries@master
        name: Upload .deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: deb/autobrightness*.deb

      - uses: skx/github-action-publish-binaries@master
        name: Upload standalone
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: standalone/autobrightness*-standalone.zip

      - uses: skx/github-action-publish-binaries@master
        name: Upload exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: exe/autobrightness*-windows.zip
      
      - uses: skx/github-action-publish-binaries@master
        name: Upload macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: macos/autobrightness*-macos.zip
